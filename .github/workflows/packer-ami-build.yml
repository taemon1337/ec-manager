name: Weekly Ubuntu AMI Build

on:
  schedule:
    - cron: '0 0 * * 1'  # Every Monday at 00:00 UTC
  workflow_dispatch:  # Allow manual triggers

jobs:
  build:
    runs-on: ubuntu-latest
    environment: packer-action
    defaults:
      run:
        working-directory: packer
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}


      # AWS IAM Policy
      # {
      #   "Version": "2012-10-17",
      #   "Statement": [
      #     {
      #       "Effect": "Allow",
      #       "Action": [
      #         "ec2:RunInstances",
      #         "ec2:StopInstances",
      #         "ec2:TerminateInstances",
      #         "ec2:DescribeInstances",
      #         "ec2:DescribeInstanceStatus",
      #         "ec2:DescribeImages",
      #         "ec2:CreateImage",
      #         "ec2:DescribeTags",
      #         "ec2:CreateSecurityGroup",
      #         "ec2:DeleteSecurityGroup",
      #         "ec2:AuthorizeSecurityGroupIngress",
      #         "ec2:RevokeSecurityGroupIngress",
      #         "ec2:DescribeSecurityGroups",
      #         "ec2:DescribeKeyPairs",
      #         "ec2:CreateNetworkInterface",
      #         "ec2:DeleteNetworkInterface",
      #         "ec2:DescribeNetworkInterfaces",
      #         "ec2:AttachVolume",
      #         "ec2:DetachVolume",
      #         "ec2:DescribeVolumes",
      #         "ec2:DeleteVolume",
      #         "ec2:CreateVolume",
      #         "ec2:CreateTags",
      #         "ec2:DeleteTags"
      #       ],
      #       "Resource": "*"
      #     }
      #   ]
      # }

      - name: Write Secret to File
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PRIVATE_KEY_NAME: ${{ vars.SSH_PRIVATE_KEY_NAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/${SSH_PRIVATE_KEY_NAME}
          chmod 600 ~/.ssh/${SSH_PRIVATE_KEY_NAME}

      - name: Build Ubuntu AMI
        env:
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SSH_PRIVATE_KEY_NAME: ${{ vars.SSH_PRIVATE_KEY_NAME }}
        run: |
          ls ~/.ssh/${SSH_PRIVATE_KEY_NAME}
          make docker-build
          make init
          make ubuntu

      - name: Build RHEL9 AMI
        env:
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SSH_PRIVATE_KEY_NAME: ${{ vars.SSH_PRIVATE_KEY_NAME }}
        run: |
          ls ~/.ssh/${SSH_PRIVATE_KEY_NAME}
          make docker-build
          make init
          make rhel9

      - name: Upload Manifest
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: packer-manifest
          path: packer/manifest.json
          retention-days: 30

      - name: Cleanup
        run: |
          echo "Cleaning up..."
          rm -rf ~/.ssh